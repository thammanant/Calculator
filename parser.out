Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement statements
Rule 2     program -> <empty>
Rule 3     statements -> statement statements
Rule 4     statements -> <empty>
Rule 5     statement -> assignment
Rule 6     statement -> expression
Rule 7     statement -> error
Rule 8     assignment -> variable ASSIGN expression
Rule 9     expression -> term
Rule 10    expression -> term binary-operator expression
Rule 11    term -> factor
Rule 12    term -> factor POW term
Rule 13    factor -> number
Rule 14    factor -> variable
Rule 15    factor -> LPAREN expression RPAREN
Rule 16    number -> INT
Rule 17    number -> REAL
Rule 18    variable -> VAR
Rule 19    variable -> VAR ASSIGN number
Rule 20    binary-operator -> ADD
Rule 21    binary-operator -> SUB
Rule 22    binary-operator -> MUL
Rule 23    binary-operator -> DIV
Rule 24    binary-operator -> INT_DIV
Rule 25    binary-operator -> GTE
Rule 26    binary-operator -> GT
Rule 27    binary-operator -> LTE
Rule 28    binary-operator -> LT
Rule 29    binary-operator -> EQ
Rule 30    binary-operator -> NEQ

Terminals, with rules where they appear

ADD                  : 20
ASSIGN               : 8 19
DIV                  : 23
EQ                   : 29
GT                   : 26
GTE                  : 25
INT                  : 16
INT_DIV              : 24
LPAREN               : 15
LT                   : 28
LTE                  : 27
MUL                  : 22
NEQ                  : 30
POW                  : 12
REAL                 : 17
RPAREN               : 15
SUB                  : 21
VAR                  : 18 19
error                : 7

Nonterminals, with rules where they appear

assignment           : 5
binary-operator      : 10
expression           : 6 8 10 15
factor               : 11 12
number               : 13 19
program              : 0
statement            : 1 3
statements           : 1 3
term                 : 9 10 12
variable             : 8 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement statements
    (2) program -> .
    (5) statement -> . assignment
    (6) statement -> . expression
    (7) statement -> . error
    (8) assignment -> . variable ASSIGN expression
    (9) expression -> . term
    (10) expression -> . term binary-operator expression
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL

    $end            reduce using rule 2 (program -> .)
    error           shift and go to state 5
    VAR             shift and go to state 8
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13

    program                        shift and go to state 1
    statement                      shift and go to state 2
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    variable                       shift and go to state 6
    term                           shift and go to state 7
    number                         shift and go to state 9
    factor                         shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> statement . statements
    (3) statements -> . statement statements
    (4) statements -> .
    (5) statement -> . assignment
    (6) statement -> . expression
    (7) statement -> . error
    (8) assignment -> . variable ASSIGN expression
    (9) expression -> . term
    (10) expression -> . term binary-operator expression
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL

    $end            reduce using rule 4 (statements -> .)
    error           shift and go to state 5
    VAR             shift and go to state 8
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13

    statement                      shift and go to state 14
    statements                     shift and go to state 15
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    variable                       shift and go to state 6
    term                           shift and go to state 7
    number                         shift and go to state 9
    factor                         shift and go to state 10

state 3

    (5) statement -> assignment .

    error           reduce using rule 5 (statement -> assignment .)
    VAR             reduce using rule 5 (statement -> assignment .)
    LPAREN          reduce using rule 5 (statement -> assignment .)
    INT             reduce using rule 5 (statement -> assignment .)
    REAL            reduce using rule 5 (statement -> assignment .)
    $end            reduce using rule 5 (statement -> assignment .)


state 4

    (6) statement -> expression .

    error           reduce using rule 6 (statement -> expression .)
    VAR             reduce using rule 6 (statement -> expression .)
    LPAREN          reduce using rule 6 (statement -> expression .)
    INT             reduce using rule 6 (statement -> expression .)
    REAL            reduce using rule 6 (statement -> expression .)
    $end            reduce using rule 6 (statement -> expression .)


state 5

    (7) statement -> error .

    error           reduce using rule 7 (statement -> error .)
    VAR             reduce using rule 7 (statement -> error .)
    LPAREN          reduce using rule 7 (statement -> error .)
    INT             reduce using rule 7 (statement -> error .)
    REAL            reduce using rule 7 (statement -> error .)
    $end            reduce using rule 7 (statement -> error .)


state 6

    (8) assignment -> variable . ASSIGN expression
    (14) factor -> variable .

    ASSIGN          shift and go to state 16
    POW             reduce using rule 14 (factor -> variable .)
    ADD             reduce using rule 14 (factor -> variable .)
    SUB             reduce using rule 14 (factor -> variable .)
    MUL             reduce using rule 14 (factor -> variable .)
    DIV             reduce using rule 14 (factor -> variable .)
    INT_DIV         reduce using rule 14 (factor -> variable .)
    GTE             reduce using rule 14 (factor -> variable .)
    GT              reduce using rule 14 (factor -> variable .)
    LTE             reduce using rule 14 (factor -> variable .)
    LT              reduce using rule 14 (factor -> variable .)
    EQ              reduce using rule 14 (factor -> variable .)
    NEQ             reduce using rule 14 (factor -> variable .)
    error           reduce using rule 14 (factor -> variable .)
    VAR             reduce using rule 14 (factor -> variable .)
    LPAREN          reduce using rule 14 (factor -> variable .)
    INT             reduce using rule 14 (factor -> variable .)
    REAL            reduce using rule 14 (factor -> variable .)
    $end            reduce using rule 14 (factor -> variable .)


state 7

    (9) expression -> term .
    (10) expression -> term . binary-operator expression
    (20) binary-operator -> . ADD
    (21) binary-operator -> . SUB
    (22) binary-operator -> . MUL
    (23) binary-operator -> . DIV
    (24) binary-operator -> . INT_DIV
    (25) binary-operator -> . GTE
    (26) binary-operator -> . GT
    (27) binary-operator -> . LTE
    (28) binary-operator -> . LT
    (29) binary-operator -> . EQ
    (30) binary-operator -> . NEQ

    error           reduce using rule 9 (expression -> term .)
    VAR             reduce using rule 9 (expression -> term .)
    LPAREN          reduce using rule 9 (expression -> term .)
    INT             reduce using rule 9 (expression -> term .)
    REAL            reduce using rule 9 (expression -> term .)
    $end            reduce using rule 9 (expression -> term .)
    RPAREN          reduce using rule 9 (expression -> term .)
    ADD             shift and go to state 18
    SUB             shift and go to state 19
    MUL             shift and go to state 20
    DIV             shift and go to state 21
    INT_DIV         shift and go to state 22
    GTE             shift and go to state 23
    GT              shift and go to state 24
    LTE             shift and go to state 25
    LT              shift and go to state 26
    EQ              shift and go to state 27
    NEQ             shift and go to state 28

    binary-operator                shift and go to state 17

state 8

    (18) variable -> VAR .
    (19) variable -> VAR . ASSIGN number

  ! shift/reduce conflict for ASSIGN resolved as shift
    POW             reduce using rule 18 (variable -> VAR .)
    ADD             reduce using rule 18 (variable -> VAR .)
    SUB             reduce using rule 18 (variable -> VAR .)
    MUL             reduce using rule 18 (variable -> VAR .)
    DIV             reduce using rule 18 (variable -> VAR .)
    INT_DIV         reduce using rule 18 (variable -> VAR .)
    GTE             reduce using rule 18 (variable -> VAR .)
    GT              reduce using rule 18 (variable -> VAR .)
    LTE             reduce using rule 18 (variable -> VAR .)
    LT              reduce using rule 18 (variable -> VAR .)
    EQ              reduce using rule 18 (variable -> VAR .)
    NEQ             reduce using rule 18 (variable -> VAR .)
    error           reduce using rule 18 (variable -> VAR .)
    VAR             reduce using rule 18 (variable -> VAR .)
    LPAREN          reduce using rule 18 (variable -> VAR .)
    INT             reduce using rule 18 (variable -> VAR .)
    REAL            reduce using rule 18 (variable -> VAR .)
    $end            reduce using rule 18 (variable -> VAR .)
    RPAREN          reduce using rule 18 (variable -> VAR .)
    ASSIGN          shift and go to state 29

  ! ASSIGN          [ reduce using rule 18 (variable -> VAR .) ]


state 9

    (13) factor -> number .

    POW             reduce using rule 13 (factor -> number .)
    ADD             reduce using rule 13 (factor -> number .)
    SUB             reduce using rule 13 (factor -> number .)
    MUL             reduce using rule 13 (factor -> number .)
    DIV             reduce using rule 13 (factor -> number .)
    INT_DIV         reduce using rule 13 (factor -> number .)
    GTE             reduce using rule 13 (factor -> number .)
    GT              reduce using rule 13 (factor -> number .)
    LTE             reduce using rule 13 (factor -> number .)
    LT              reduce using rule 13 (factor -> number .)
    EQ              reduce using rule 13 (factor -> number .)
    NEQ             reduce using rule 13 (factor -> number .)
    error           reduce using rule 13 (factor -> number .)
    VAR             reduce using rule 13 (factor -> number .)
    LPAREN          reduce using rule 13 (factor -> number .)
    INT             reduce using rule 13 (factor -> number .)
    REAL            reduce using rule 13 (factor -> number .)
    $end            reduce using rule 13 (factor -> number .)
    RPAREN          reduce using rule 13 (factor -> number .)


state 10

    (11) term -> factor .
    (12) term -> factor . POW term

    ADD             reduce using rule 11 (term -> factor .)
    SUB             reduce using rule 11 (term -> factor .)
    MUL             reduce using rule 11 (term -> factor .)
    DIV             reduce using rule 11 (term -> factor .)
    INT_DIV         reduce using rule 11 (term -> factor .)
    GTE             reduce using rule 11 (term -> factor .)
    GT              reduce using rule 11 (term -> factor .)
    LTE             reduce using rule 11 (term -> factor .)
    LT              reduce using rule 11 (term -> factor .)
    EQ              reduce using rule 11 (term -> factor .)
    NEQ             reduce using rule 11 (term -> factor .)
    error           reduce using rule 11 (term -> factor .)
    VAR             reduce using rule 11 (term -> factor .)
    LPAREN          reduce using rule 11 (term -> factor .)
    INT             reduce using rule 11 (term -> factor .)
    REAL            reduce using rule 11 (term -> factor .)
    $end            reduce using rule 11 (term -> factor .)
    RPAREN          reduce using rule 11 (term -> factor .)
    POW             shift and go to state 30


state 11

    (15) factor -> LPAREN . expression RPAREN
    (9) expression -> . term
    (10) expression -> . term binary-operator expression
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13
    VAR             shift and go to state 8

    expression                     shift and go to state 31
    term                           shift and go to state 7
    factor                         shift and go to state 10
    number                         shift and go to state 9
    variable                       shift and go to state 32

state 12

    (16) number -> INT .

    POW             reduce using rule 16 (number -> INT .)
    ADD             reduce using rule 16 (number -> INT .)
    SUB             reduce using rule 16 (number -> INT .)
    MUL             reduce using rule 16 (number -> INT .)
    DIV             reduce using rule 16 (number -> INT .)
    INT_DIV         reduce using rule 16 (number -> INT .)
    GTE             reduce using rule 16 (number -> INT .)
    GT              reduce using rule 16 (number -> INT .)
    LTE             reduce using rule 16 (number -> INT .)
    LT              reduce using rule 16 (number -> INT .)
    EQ              reduce using rule 16 (number -> INT .)
    NEQ             reduce using rule 16 (number -> INT .)
    error           reduce using rule 16 (number -> INT .)
    VAR             reduce using rule 16 (number -> INT .)
    LPAREN          reduce using rule 16 (number -> INT .)
    INT             reduce using rule 16 (number -> INT .)
    REAL            reduce using rule 16 (number -> INT .)
    $end            reduce using rule 16 (number -> INT .)
    RPAREN          reduce using rule 16 (number -> INT .)
    ASSIGN          reduce using rule 16 (number -> INT .)


state 13

    (17) number -> REAL .

    POW             reduce using rule 17 (number -> REAL .)
    ADD             reduce using rule 17 (number -> REAL .)
    SUB             reduce using rule 17 (number -> REAL .)
    MUL             reduce using rule 17 (number -> REAL .)
    DIV             reduce using rule 17 (number -> REAL .)
    INT_DIV         reduce using rule 17 (number -> REAL .)
    GTE             reduce using rule 17 (number -> REAL .)
    GT              reduce using rule 17 (number -> REAL .)
    LTE             reduce using rule 17 (number -> REAL .)
    LT              reduce using rule 17 (number -> REAL .)
    EQ              reduce using rule 17 (number -> REAL .)
    NEQ             reduce using rule 17 (number -> REAL .)
    error           reduce using rule 17 (number -> REAL .)
    VAR             reduce using rule 17 (number -> REAL .)
    LPAREN          reduce using rule 17 (number -> REAL .)
    INT             reduce using rule 17 (number -> REAL .)
    REAL            reduce using rule 17 (number -> REAL .)
    $end            reduce using rule 17 (number -> REAL .)
    RPAREN          reduce using rule 17 (number -> REAL .)
    ASSIGN          reduce using rule 17 (number -> REAL .)


state 14

    (3) statements -> statement . statements
    (3) statements -> . statement statements
    (4) statements -> .
    (5) statement -> . assignment
    (6) statement -> . expression
    (7) statement -> . error
    (8) assignment -> . variable ASSIGN expression
    (9) expression -> . term
    (10) expression -> . term binary-operator expression
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL

    $end            reduce using rule 4 (statements -> .)
    error           shift and go to state 5
    VAR             shift and go to state 8
    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13

    statement                      shift and go to state 14
    statements                     shift and go to state 33
    assignment                     shift and go to state 3
    expression                     shift and go to state 4
    variable                       shift and go to state 6
    term                           shift and go to state 7
    number                         shift and go to state 9
    factor                         shift and go to state 10

state 15

    (1) program -> statement statements .

    $end            reduce using rule 1 (program -> statement statements .)


state 16

    (8) assignment -> variable ASSIGN . expression
    (9) expression -> . term
    (10) expression -> . term binary-operator expression
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13
    VAR             shift and go to state 8

    variable                       shift and go to state 32
    expression                     shift and go to state 34
    term                           shift and go to state 7
    factor                         shift and go to state 10
    number                         shift and go to state 9

state 17

    (10) expression -> term binary-operator . expression
    (9) expression -> . term
    (10) expression -> . term binary-operator expression
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13
    VAR             shift and go to state 8

    term                           shift and go to state 7
    expression                     shift and go to state 35
    factor                         shift and go to state 10
    number                         shift and go to state 9
    variable                       shift and go to state 32

state 18

    (20) binary-operator -> ADD .

    LPAREN          reduce using rule 20 (binary-operator -> ADD .)
    INT             reduce using rule 20 (binary-operator -> ADD .)
    REAL            reduce using rule 20 (binary-operator -> ADD .)
    VAR             reduce using rule 20 (binary-operator -> ADD .)


state 19

    (21) binary-operator -> SUB .

    LPAREN          reduce using rule 21 (binary-operator -> SUB .)
    INT             reduce using rule 21 (binary-operator -> SUB .)
    REAL            reduce using rule 21 (binary-operator -> SUB .)
    VAR             reduce using rule 21 (binary-operator -> SUB .)


state 20

    (22) binary-operator -> MUL .

    LPAREN          reduce using rule 22 (binary-operator -> MUL .)
    INT             reduce using rule 22 (binary-operator -> MUL .)
    REAL            reduce using rule 22 (binary-operator -> MUL .)
    VAR             reduce using rule 22 (binary-operator -> MUL .)


state 21

    (23) binary-operator -> DIV .

    LPAREN          reduce using rule 23 (binary-operator -> DIV .)
    INT             reduce using rule 23 (binary-operator -> DIV .)
    REAL            reduce using rule 23 (binary-operator -> DIV .)
    VAR             reduce using rule 23 (binary-operator -> DIV .)


state 22

    (24) binary-operator -> INT_DIV .

    LPAREN          reduce using rule 24 (binary-operator -> INT_DIV .)
    INT             reduce using rule 24 (binary-operator -> INT_DIV .)
    REAL            reduce using rule 24 (binary-operator -> INT_DIV .)
    VAR             reduce using rule 24 (binary-operator -> INT_DIV .)


state 23

    (25) binary-operator -> GTE .

    LPAREN          reduce using rule 25 (binary-operator -> GTE .)
    INT             reduce using rule 25 (binary-operator -> GTE .)
    REAL            reduce using rule 25 (binary-operator -> GTE .)
    VAR             reduce using rule 25 (binary-operator -> GTE .)


state 24

    (26) binary-operator -> GT .

    LPAREN          reduce using rule 26 (binary-operator -> GT .)
    INT             reduce using rule 26 (binary-operator -> GT .)
    REAL            reduce using rule 26 (binary-operator -> GT .)
    VAR             reduce using rule 26 (binary-operator -> GT .)


state 25

    (27) binary-operator -> LTE .

    LPAREN          reduce using rule 27 (binary-operator -> LTE .)
    INT             reduce using rule 27 (binary-operator -> LTE .)
    REAL            reduce using rule 27 (binary-operator -> LTE .)
    VAR             reduce using rule 27 (binary-operator -> LTE .)


state 26

    (28) binary-operator -> LT .

    LPAREN          reduce using rule 28 (binary-operator -> LT .)
    INT             reduce using rule 28 (binary-operator -> LT .)
    REAL            reduce using rule 28 (binary-operator -> LT .)
    VAR             reduce using rule 28 (binary-operator -> LT .)


state 27

    (29) binary-operator -> EQ .

    LPAREN          reduce using rule 29 (binary-operator -> EQ .)
    INT             reduce using rule 29 (binary-operator -> EQ .)
    REAL            reduce using rule 29 (binary-operator -> EQ .)
    VAR             reduce using rule 29 (binary-operator -> EQ .)


state 28

    (30) binary-operator -> NEQ .

    LPAREN          reduce using rule 30 (binary-operator -> NEQ .)
    INT             reduce using rule 30 (binary-operator -> NEQ .)
    REAL            reduce using rule 30 (binary-operator -> NEQ .)
    VAR             reduce using rule 30 (binary-operator -> NEQ .)


state 29

    (19) variable -> VAR ASSIGN . number
    (16) number -> . INT
    (17) number -> . REAL

    INT             shift and go to state 12
    REAL            shift and go to state 13

    number                         shift and go to state 36

state 30

    (12) term -> factor POW . term
    (11) term -> . factor
    (12) term -> . factor POW term
    (13) factor -> . number
    (14) factor -> . variable
    (15) factor -> . LPAREN expression RPAREN
    (16) number -> . INT
    (17) number -> . REAL
    (18) variable -> . VAR
    (19) variable -> . VAR ASSIGN number

    LPAREN          shift and go to state 11
    INT             shift and go to state 12
    REAL            shift and go to state 13
    VAR             shift and go to state 8

    factor                         shift and go to state 10
    term                           shift and go to state 37
    number                         shift and go to state 9
    variable                       shift and go to state 32

state 31

    (15) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 38


state 32

    (14) factor -> variable .

    POW             reduce using rule 14 (factor -> variable .)
    ADD             reduce using rule 14 (factor -> variable .)
    SUB             reduce using rule 14 (factor -> variable .)
    MUL             reduce using rule 14 (factor -> variable .)
    DIV             reduce using rule 14 (factor -> variable .)
    INT_DIV         reduce using rule 14 (factor -> variable .)
    GTE             reduce using rule 14 (factor -> variable .)
    GT              reduce using rule 14 (factor -> variable .)
    LTE             reduce using rule 14 (factor -> variable .)
    LT              reduce using rule 14 (factor -> variable .)
    EQ              reduce using rule 14 (factor -> variable .)
    NEQ             reduce using rule 14 (factor -> variable .)
    RPAREN          reduce using rule 14 (factor -> variable .)
    error           reduce using rule 14 (factor -> variable .)
    VAR             reduce using rule 14 (factor -> variable .)
    LPAREN          reduce using rule 14 (factor -> variable .)
    INT             reduce using rule 14 (factor -> variable .)
    REAL            reduce using rule 14 (factor -> variable .)
    $end            reduce using rule 14 (factor -> variable .)


state 33

    (3) statements -> statement statements .

    $end            reduce using rule 3 (statements -> statement statements .)


state 34

    (8) assignment -> variable ASSIGN expression .

    error           reduce using rule 8 (assignment -> variable ASSIGN expression .)
    VAR             reduce using rule 8 (assignment -> variable ASSIGN expression .)
    LPAREN          reduce using rule 8 (assignment -> variable ASSIGN expression .)
    INT             reduce using rule 8 (assignment -> variable ASSIGN expression .)
    REAL            reduce using rule 8 (assignment -> variable ASSIGN expression .)
    $end            reduce using rule 8 (assignment -> variable ASSIGN expression .)


state 35

    (10) expression -> term binary-operator expression .

    error           reduce using rule 10 (expression -> term binary-operator expression .)
    VAR             reduce using rule 10 (expression -> term binary-operator expression .)
    LPAREN          reduce using rule 10 (expression -> term binary-operator expression .)
    INT             reduce using rule 10 (expression -> term binary-operator expression .)
    REAL            reduce using rule 10 (expression -> term binary-operator expression .)
    $end            reduce using rule 10 (expression -> term binary-operator expression .)
    RPAREN          reduce using rule 10 (expression -> term binary-operator expression .)


state 36

    (19) variable -> VAR ASSIGN number .

    ASSIGN          reduce using rule 19 (variable -> VAR ASSIGN number .)
    POW             reduce using rule 19 (variable -> VAR ASSIGN number .)
    ADD             reduce using rule 19 (variable -> VAR ASSIGN number .)
    SUB             reduce using rule 19 (variable -> VAR ASSIGN number .)
    MUL             reduce using rule 19 (variable -> VAR ASSIGN number .)
    DIV             reduce using rule 19 (variable -> VAR ASSIGN number .)
    INT_DIV         reduce using rule 19 (variable -> VAR ASSIGN number .)
    GTE             reduce using rule 19 (variable -> VAR ASSIGN number .)
    GT              reduce using rule 19 (variable -> VAR ASSIGN number .)
    LTE             reduce using rule 19 (variable -> VAR ASSIGN number .)
    LT              reduce using rule 19 (variable -> VAR ASSIGN number .)
    EQ              reduce using rule 19 (variable -> VAR ASSIGN number .)
    NEQ             reduce using rule 19 (variable -> VAR ASSIGN number .)
    error           reduce using rule 19 (variable -> VAR ASSIGN number .)
    VAR             reduce using rule 19 (variable -> VAR ASSIGN number .)
    LPAREN          reduce using rule 19 (variable -> VAR ASSIGN number .)
    INT             reduce using rule 19 (variable -> VAR ASSIGN number .)
    REAL            reduce using rule 19 (variable -> VAR ASSIGN number .)
    $end            reduce using rule 19 (variable -> VAR ASSIGN number .)
    RPAREN          reduce using rule 19 (variable -> VAR ASSIGN number .)


state 37

    (12) term -> factor POW term .

    ADD             reduce using rule 12 (term -> factor POW term .)
    SUB             reduce using rule 12 (term -> factor POW term .)
    MUL             reduce using rule 12 (term -> factor POW term .)
    DIV             reduce using rule 12 (term -> factor POW term .)
    INT_DIV         reduce using rule 12 (term -> factor POW term .)
    GTE             reduce using rule 12 (term -> factor POW term .)
    GT              reduce using rule 12 (term -> factor POW term .)
    LTE             reduce using rule 12 (term -> factor POW term .)
    LT              reduce using rule 12 (term -> factor POW term .)
    EQ              reduce using rule 12 (term -> factor POW term .)
    NEQ             reduce using rule 12 (term -> factor POW term .)
    error           reduce using rule 12 (term -> factor POW term .)
    VAR             reduce using rule 12 (term -> factor POW term .)
    LPAREN          reduce using rule 12 (term -> factor POW term .)
    INT             reduce using rule 12 (term -> factor POW term .)
    REAL            reduce using rule 12 (term -> factor POW term .)
    $end            reduce using rule 12 (term -> factor POW term .)
    RPAREN          reduce using rule 12 (term -> factor POW term .)


state 38

    (15) factor -> LPAREN expression RPAREN .

    POW             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    ADD             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    SUB             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    MUL             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    INT_DIV         reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    GTE             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    LTE             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    EQ              reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    error           reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    VAR             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    INT             reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    REAL            reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 15 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 15 (factor -> LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASSIGN in state 8 resolved as shift
